datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Guild {
  guildId                   String   @id @unique
  guildOwnerId              String
  currentQuarter            Quarter? @relation("GuildCurrentQuarter", fields: [currentQuarterId], references: [id])
  currentQuarterId          Int?
  countingChannelId         String?
  countingChannelCurrentInt Int?
  courseRequestsChannelId   String?
  loggingChannelId          String?
  qotdChannelId             String?
  introductionsChannelId    String?
  moderatorRoleId           String?
  courseManagerRoleId       String?
  communityPingRoleId       String?
  welcomeMessage            String?

  courses   Course[]
  quarters  Quarter[]
  selfRoles SelfRole[]
  tags      Tag[]
}

model Course {
  id          Int      @id @default(autoincrement())
  guild       Guild    @relation(fields: [guildId], references: [guildId])
  guildId     String
  description String?
  quarter     Quarter  @relation(fields: [quarterId], references: [id])
  quarterId   Int
  roleId      String   @unique
  channelId   String
  category    Boolean  @default(false)
  owner       String?
  password    String?
  aliases     String[]
}

model Quarter {
  id                        Int      @id @default(autoincrement())
  name                      String
  quarterCategoryChannelIds String[]
  guilId                    String
  guild                     Guild    @relation(fields: [guilId], references: [guildId])

  Course Course[]
  Guild  Guild[]  @relation("GuildCurrentQuarter")
}

model SelfRole {
  roleId  String @id @unique
  name    String
  guildId String
  guild   Guild  @relation(fields: [guildId], references: [guildId])
}

model Tag {
  id      Int    @id @default(autoincrement())
  name    String
  tagText String
  guildId String
  guild   Guild  @relation(fields: [guildId], references: [guildId])
}

enum BotLogLevel {
  DEBUG
  INFO
  WARN
  ERROR
  FATAL
}

model Log {
  id        Int         @id @default(autoincrement())
  guildId   String?
  level     BotLogLevel
  message   String
  timestamp DateTime    @default(now())

  @@map("log")
}
